/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Kandy - Insights
 * This is the public Kandy REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


using Newtonsoft.Json;
using System;
using System.Collections.Generic;
using Kandy.Base;
using Kandy.Clients;
using Kandy.Converters;
using Kandy.Exceptions;
using Kandy.Http;
using Kandy.Types;


namespace Kandy.Rest.Insights.V1.Call
{
    public class CallSummaryResource : Resource
    {

        [JsonConverter(typeof(StringEnumConverter))]
        public sealed class ProcessingStateEnum : StringEnum
        {
            private ProcessingStateEnum(string value) : base(value) { }
            public ProcessingStateEnum() { }
            public static implicit operator ProcessingStateEnum(string value)
            {
                return new ProcessingStateEnum(value);
            }
            public static readonly ProcessingStateEnum Complete = new ProcessingStateEnum("complete");
            public static readonly ProcessingStateEnum Partial = new ProcessingStateEnum("partial");

        }
        [JsonConverter(typeof(StringEnumConverter))]
        public sealed class AnsweredByEnum : StringEnum
        {
            private AnsweredByEnum(string value) : base(value) { }
            public AnsweredByEnum() { }
            public static implicit operator AnsweredByEnum(string value)
            {
                return new AnsweredByEnum(value);
            }
            public static readonly AnsweredByEnum Unknown = new AnsweredByEnum("unknown");
            public static readonly AnsweredByEnum MachineStart = new AnsweredByEnum("machine_start");
            public static readonly AnsweredByEnum MachineEndBeep = new AnsweredByEnum("machine_end_beep");
            public static readonly AnsweredByEnum MachineEndSilence = new AnsweredByEnum("machine_end_silence");
            public static readonly AnsweredByEnum MachineEndOther = new AnsweredByEnum("machine_end_other");
            public static readonly AnsweredByEnum Human = new AnsweredByEnum("human");
            public static readonly AnsweredByEnum Fax = new AnsweredByEnum("fax");

        }
        [JsonConverter(typeof(StringEnumConverter))]
        public sealed class CallStateEnum : StringEnum
        {
            private CallStateEnum(string value) : base(value) { }
            public CallStateEnum() { }
            public static implicit operator CallStateEnum(string value)
            {
                return new CallStateEnum(value);
            }
            public static readonly CallStateEnum Ringing = new CallStateEnum("ringing");
            public static readonly CallStateEnum Completed = new CallStateEnum("completed");
            public static readonly CallStateEnum Busy = new CallStateEnum("busy");
            public static readonly CallStateEnum Fail = new CallStateEnum("fail");
            public static readonly CallStateEnum Noanswer = new CallStateEnum("noanswer");
            public static readonly CallStateEnum Canceled = new CallStateEnum("canceled");
            public static readonly CallStateEnum Answered = new CallStateEnum("answered");
            public static readonly CallStateEnum Undialed = new CallStateEnum("undialed");

        }
        [JsonConverter(typeof(StringEnumConverter))]
        public sealed class CallTypeEnum : StringEnum
        {
            private CallTypeEnum(string value) : base(value) { }
            public CallTypeEnum() { }
            public static implicit operator CallTypeEnum(string value)
            {
                return new CallTypeEnum(value);
            }
            public static readonly CallTypeEnum Carrier = new CallTypeEnum("carrier");
            public static readonly CallTypeEnum Sip = new CallTypeEnum("sip");
            public static readonly CallTypeEnum Trunking = new CallTypeEnum("trunking");
            public static readonly CallTypeEnum Client = new CallTypeEnum("client");

        }


        private static Request BuildFetchRequest(FetchCallSummaryOptions options, IKandyRestClient client)
        {

            string path = "/v1/Voice/{CallSid}/Summary";

            string PathCallSid = options.PathCallSid;
            path = path.Replace("{" + "CallSid" + "}", PathCallSid);

            return new Request(
                HttpMethod.Get,
                Rest.Domain.Insights,
                path,
                queryParams: options.GetParams(),
                headerParams: null
            );
        }

        /// <summary> fetch </summary>
        /// <param name="options"> Fetch CallSummary parameters </param>
        /// <param name="client"> Client to make requests to Kandy </param>
        /// <returns> A single instance of CallSummary </returns>
        public static CallSummaryResource Fetch(FetchCallSummaryOptions options, IKandyRestClient client = null)
        {
            client = client ?? KandyClient.GetRestClient();
            var response = client.Request(BuildFetchRequest(options, client));
            return FromJson(response.Content);
        }

#if !NET35
        /// <summary> fetch </summary>
        /// <param name="options"> Fetch CallSummary parameters </param>
        /// <param name="client"> Client to make requests to Kandy </param>
        /// <returns> Task that resolves to A single instance of CallSummary </returns>
        public static async System.Threading.Tasks.Task<CallSummaryResource> FetchAsync(FetchCallSummaryOptions options,
                                                                                             IKandyRestClient client = null)
        {
            client = client ?? KandyClient.GetRestClient();
            var response = await client.RequestAsync(BuildFetchRequest(options, client));
            return FromJson(response.Content);
        }
#endif
        /// <summary> fetch </summary>
        /// <param name="pathCallSid">  </param>
        /// <param name="processingState">  </param>
        /// <param name="client"> Client to make requests to Kandy </param>
        /// <returns> A single instance of CallSummary </returns>
        public static CallSummaryResource Fetch(
                                         string pathCallSid,
                                         CallSummaryResource.ProcessingStateEnum processingState = null,
                                         IKandyRestClient client = null)
        {
            var options = new FetchCallSummaryOptions(pathCallSid) { ProcessingState = processingState };
            return Fetch(options, client);
        }

#if !NET35
        /// <summary> fetch </summary>
        /// <param name="pathCallSid">  </param>
        /// <param name="processingState">  </param>
        /// <param name="client"> Client to make requests to Kandy </param>
        /// <returns> Task that resolves to A single instance of CallSummary </returns>
        public static async System.Threading.Tasks.Task<CallSummaryResource> FetchAsync(string pathCallSid, CallSummaryResource.ProcessingStateEnum processingState = null, IKandyRestClient client = null)
        {
            var options = new FetchCallSummaryOptions(pathCallSid) { ProcessingState = processingState };
            return await FetchAsync(options, client);
        }
#endif

        /// <summary>
        /// Converts a JSON string into a CallSummaryResource object
        /// </summary>
        /// <param name="json"> Raw JSON string </param>
        /// <returns> CallSummaryResource object represented by the provided JSON </returns>
        public static CallSummaryResource FromJson(string json)
        {
            try
            {
                return JsonConvert.DeserializeObject<CallSummaryResource>(json);
            }
            catch (JsonException e)
            {
                throw new ApiException(e.Message, e);
            }
        }


        ///<summary> The account_sid </summary> 
        [JsonProperty("account_sid")]
        public string AccountSid { get; private set; }

        ///<summary> The call_sid </summary> 
        [JsonProperty("call_sid")]
        public string CallSid { get; private set; }


        [JsonProperty("call_type")]
        public CallSummaryResource.CallTypeEnum CallType { get; private set; }


        [JsonProperty("call_state")]
        public CallSummaryResource.CallStateEnum CallState { get; private set; }


        [JsonProperty("answered_by")]
        public CallSummaryResource.AnsweredByEnum AnsweredBy { get; private set; }


        [JsonProperty("processing_state")]
        public CallSummaryResource.ProcessingStateEnum ProcessingState { get; private set; }

        ///<summary> The created_time </summary> 
        [JsonProperty("created_time")]
        public DateTime? CreatedTime { get; private set; }

        ///<summary> The start_time </summary> 
        [JsonProperty("start_time")]
        public DateTime? StartTime { get; private set; }

        ///<summary> The end_time </summary> 
        [JsonProperty("end_time")]
        public DateTime? EndTime { get; private set; }

        ///<summary> The duration </summary> 
        [JsonProperty("duration")]
        public int? Duration { get; private set; }

        ///<summary> The connect_duration </summary> 
        [JsonProperty("connect_duration")]
        public int? ConnectDuration { get; private set; }

        ///<summary> The from </summary> 
        [JsonProperty("from")]
        public object From { get; private set; }

        ///<summary> The to </summary> 
        [JsonProperty("to")]
        public object To { get; private set; }

        ///<summary> The carrier_edge </summary> 
        [JsonProperty("carrier_edge")]
        public object CarrierEdge { get; private set; }

        ///<summary> The client_edge </summary> 
        [JsonProperty("client_edge")]
        public object ClientEdge { get; private set; }

        ///<summary> The sdk_edge </summary> 
        [JsonProperty("sdk_edge")]
        public object SdkEdge { get; private set; }

        ///<summary> The sip_edge </summary> 
        [JsonProperty("sip_edge")]
        public object SipEdge { get; private set; }

        ///<summary> The tags </summary> 
        [JsonProperty("tags")]
        public List<string> Tags { get; private set; }

        ///<summary> The url </summary> 
        [JsonProperty("url")]
        public Uri Url { get; private set; }

        ///<summary> The attributes </summary> 
        [JsonProperty("attributes")]
        public object Attributes { get; private set; }

        ///<summary> The properties </summary> 
        [JsonProperty("properties")]
        public object Properties { get; private set; }

        ///<summary> The trust </summary> 
        [JsonProperty("trust")]
        public object Trust { get; private set; }

        ///<summary> The annotation </summary> 
        [JsonProperty("annotation")]
        public object Annotation { get; private set; }



        private CallSummaryResource()
        {

        }
    }
}
