/// This code was generated by
/// \ / _    _  _|   _  _
///  | (_)\/(_)(_|\/| |(/_  v1.0.0
///       /       /

using System.Collections.Generic;
using System.IO;
using System.Text;
using System.Xml.Linq;

namespace Kandy.TwiML.Voice
{

    /// <summary>
    /// VirtualAgent TwiML Noun
    /// </summary>
    public class VirtualAgent : TwiML
    {
        /// <summary>
        /// Defines the conversation profile Dialogflow needs to use
        /// </summary>
        public string ConnectorName { get; set; }
        /// <summary>
        /// Language to be used by Dialogflow to transcribe speech
        /// </summary>
        public string Language { get; set; }
        /// <summary>
        /// Whether sentiment analysis needs to be enabled or not
        /// </summary>
        public bool? SentimentAnalysis { get; set; }
        /// <summary>
        /// URL to post status callbacks from Twilio
        /// </summary>
        public string StatusCallback { get; set; }
        /// <summary>
        /// HTTP method to use when requesting the status callback URL
        /// </summary>
        public Twilio.Http.HttpMethod StatusCallbackMethod { get; set; }

        /// <summary>
        /// Create a new VirtualAgent
        /// </summary>
        /// <param name="connectorName"> Defines the conversation profile Dialogflow needs to use </param>
        /// <param name="language"> Language to be used by Dialogflow to transcribe speech </param>
        /// <param name="sentimentAnalysis"> Whether sentiment analysis needs to be enabled or not </param>
        /// <param name="statusCallback"> URL to post status callbacks from Twilio </param>
        /// <param name="statusCallbackMethod"> HTTP method to use when requesting the status callback URL </param>
        public VirtualAgent(string connectorName = null,
                            string language = null,
                            bool? sentimentAnalysis = null,
                            string statusCallback = null,
                            Twilio.Http.HttpMethod statusCallbackMethod = null) : base("VirtualAgent")
        {
            this.ConnectorName = connectorName;
            this.Language = language;
            this.SentimentAnalysis = sentimentAnalysis;
            this.StatusCallback = statusCallback;
            this.StatusCallbackMethod = statusCallbackMethod;
        }

        /// <summary>
        /// Return the attributes of the TwiML tag
        /// </summary>
        protected override List<XAttribute> GetElementAttributes()
        {
            var attributes = new List<XAttribute>();
            if (this.ConnectorName != null)
            {
                attributes.Add(new XAttribute("connectorName", this.ConnectorName));
            }
            if (this.Language != null)
            {
                attributes.Add(new XAttribute("language", this.Language));
            }
            if (this.SentimentAnalysis != null)
            {
                attributes.Add(new XAttribute("sentimentAnalysis", this.SentimentAnalysis.Value.ToString().ToLower()));
            }
            if (this.StatusCallback != null)
            {
                attributes.Add(new XAttribute("statusCallback", this.StatusCallback));
            }
            if (this.StatusCallbackMethod != null)
            {
                attributes.Add(new XAttribute("statusCallbackMethod", this.StatusCallbackMethod.ToString()));
            }
            return attributes;
        }

        /// <summary>
        /// Create a new <Config/> element and append it as a child of this element.
        /// </summary>
        /// <param name="name"> The name of the custom config </param>
        /// <param name="value"> The value of the custom config </param>
        public VirtualAgent Config(string name = null, string value = null)
        {
            var newChild = new Config(name, value);
            this.Append(newChild);
            return this;
        }

        /// <summary>
        /// Append a <Config/> element as a child of this element
        /// </summary>
        /// <param name="config"> A Config instance. </param>
        [System.Obsolete("This method is deprecated, use .Append() instead.")]
        public VirtualAgent Config(Config config)
        {
            this.Append(config);
            return this;
        }

        /// <summary>
        /// Create a new <Parameter/> element and append it as a child of this element.
        /// </summary>
        /// <param name="name"> The name of the custom parameter </param>
        /// <param name="value"> The value of the custom parameter </param>
        public VirtualAgent Parameter(string name = null, string value = null)
        {
            var newChild = new Parameter(name, value);
            this.Append(newChild);
            return this;
        }

        /// <summary>
        /// Append a <Parameter/> element as a child of this element
        /// </summary>
        /// <param name="parameter"> A Parameter instance. </param>
        [System.Obsolete("This method is deprecated, use .Append() instead.")]
        public VirtualAgent Parameter(Parameter parameter)
        {
            this.Append(parameter);
            return this;
        }

        /// <summary>
        /// Append a child TwiML element to this element returning this element to allow chaining.
        /// </summary>
        /// <param name="childElem"> Child TwiML element to add </param>
        public new VirtualAgent Append(TwiML childElem)
        {
            return (VirtualAgent) base.Append(childElem);
        }

        /// <summary>
        /// Add freeform key-value attributes to the generated xml
        /// </summary>
        /// <param name="key"> Option key </param>
        /// <param name="value"> Option value </param>
        public new VirtualAgent SetOption(string key, object value)
        {
            return (VirtualAgent) base.SetOption(key, value);
        }
    }

}
