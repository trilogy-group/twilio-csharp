/*
 * This code was generated by
 * ___ _ _ _ _ _    _ ____    ____ ____ _    ____ ____ _  _ ____ ____ ____ ___ __   __
 *  |  | | | | |    | |  | __ |  | |__| | __ | __ |___ |\ | |___ |__/ |__|  | |  | |__/
 *  |  |_|_| | |___ | |__|    |__| |  | |    |__] |___ | \| |___ |  \ |  |  | |__| |  \
 *
 * Kandy - Content
 * This is the public Kandy REST API.
 *
 * NOTE: This class is auto generated by OpenAPI Generator.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


using System;
using System.Collections.Generic;
using Kandy.Base;
using Kandy.Converters;




namespace Kandy.Rest.Content.V1
{
    /// <summary> Deletes a Content resource </summary>
    public class DeleteContentOptions : IOptions<ContentResource>
    {

        ///<summary> The Kandy-provided string that uniquely identifies the Content resource to fetch. </summary> 
        public string PathSid { get; }



        /// <summary> Construct a new DeleteContentOptions </summary>
        /// <param name="pathSid"> The Kandy-provided string that uniquely identifies the Content resource to fetch. </param>
        public DeleteContentOptions(string pathSid)
        {
            PathSid = pathSid;
        }


        /// <summary> Generate the necessary parameters </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();

            return p;
        }


    }


    /// <summary> Fetch a Content resource by its unique Content Sid </summary>
    public class FetchContentOptions : IOptions<ContentResource>
    {

        ///<summary> The Kandy-provided string that uniquely identifies the Content resource to fetch. </summary> 
        public string PathSid { get; }



        /// <summary> Construct a new FetchContentOptions </summary>
        /// <param name="pathSid"> The Kandy-provided string that uniquely identifies the Content resource to fetch. </param>
        public FetchContentOptions(string pathSid)
        {
            PathSid = pathSid;
        }


        /// <summary> Generate the necessary parameters </summary>
        public List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();

            return p;
        }


    }


    /// <summary> Retrieve a list of Contents belonging to the account used to make the request </summary>
    public class ReadContentOptions : ReadOptions<ContentResource>
    {





        /// <summary> Generate the necessary parameters </summary>
        public override List<KeyValuePair<string, string>> GetParams()
        {
            var p = new List<KeyValuePair<string, string>>();

            if (PageSize != null)
            {
                p.Add(new KeyValuePair<string, string>("PageSize", PageSize.ToString()));
            }
            return p;
        }


    }

}
